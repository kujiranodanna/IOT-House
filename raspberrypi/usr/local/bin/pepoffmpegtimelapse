#!/bin/bash
# # The MIT License
# Copyright (c) 2020-2027 Isamu.Yamauchi , 2021.7.7 update 2021.7.17
# pepoffmpegtimelapse ; RaspberryPi module A script that uses a camera to perform a security camera timelapse jpg to mp4 conversion.
# That to run a of 3600 seconds interval.
PATH=$PATH:/usr/local/bin:/usr/local/sbin
WORKDIR=/www/remote-hand/tmp
DISK=/dev/sda1
IMAGE_DIR=$WORKDIR/timelapse
IMAGE_DIR_TMP=$WORKDIR/timelapse_tmp
SERVERCONF=$WORKDIR/.startup.s.tmp
REMOTEFILE=remote-hand/tmp/timelapse_tmp.tar.gz
LOCALFILE=$WORKDIR/timelapse_tmp.tar.gz
FFMPEGINPUT=$WORKDIR/timelapse_tmp.txt
USERAGENT="Chrome/87.0.4280.88"
RETRYTIME=20
RETRY=1
WAIT=5000
PORT=443
RMHOST=iot03f.local
MP_DIR=$WORKDIR/hdd
if [ ! -e $DISK ];then
  echo error no $DISK !
  exit
fi
if [ ! -e $IMAGE_DIR ];then
  mkdir -p $IMAGE_DIR
else
  rm -rf $IMAGE_DIR
  mkdir -p $IMAGE_DIR
fi
if [ ! -e $MP_DIR ];then
  mkdir -p $MP_DIR
fi
MOUNT_YES_NO=`mountpoint $MP_DIR| awk 'BEGIN{FS=" "};{if($0=/not/){printf "NO"} else {printf "YES"}}'`
if [ $MOUNT_YES_NO = "NO" ];then
  mount $DISK $MP_DIR
fi
error(){
  pkill -HUP ffmpeg
  [ -e $IMAGE_DIR ] && rm -rf $IMAGE_DIR
  [ -e $IMAGE_DIR_TMP ] && rm -rf $IMAGE_DIR_TMP
  [ -e $LOCALFILE ] && rm $LOCALFILE
  MOUNT_YES_NO=`mountpoint $MP_DIR| awk 'BEGIN{FS=" "};{if($0=/not/){printf "NO"} else {printf "YES"}}'`
  if [ $MOUNT_YES_NO = "YES" ];then
    umount $MP_DIR
  fi
  rm -rf $MP_DIR
  exit 0
}
trap error SIGQUIT SIGINT SIGTERM SIGHUP SIGKILL SIGCHLD
while true;do
  NOWMIN=`date +"%M:"`
  if [ $NOWMIN = "05:" ];then
    NOWHOUR=`date +"%H:"`
    NOWDATE=`date +"%Y-%m-%d_%H"`
    HOURAGO=`date -d "1 hour ago" +"%Y-%m-%d_%H"`
    DAYAGO=`date -d "1 day ago" +"%Y-%m-%d"`
    WEEKAGO=`date -d "1 week ago" +"%Y-%m-%d"`
    msleep 60000
  else
    msleep 10000
    continue
  fi
  MOUNT_YES_NO=`mountpoint  $MP_DIR| awk 'BEGIN{FS=" "};{if($0=/not/){printf "NO"} else {printf "YES"}}'`
  if [ $MOUNT_YES_NO = "NO" ];then
    if [ ! -e $DISK ];then
      echo error no $DISK !
      continue
    fi
    mount $DISK $MP_DIR
  fi
  if [ -e $SERVERCONF ];then
    . $SERVERCONF
    PASSWORD=$vWEBPASSWORD
    USER=$vWEBUSER
  else
    exit
  fi
  curl -s --connect-timeout $RETRYTIME --retry $RETRY --user-agent ${USERAGENT} --tlsv1 -k -u ${USER}:${PASSWORD} https://$RMHOST:$PORT/$REMOTEFILE >$LOCALFILE
  if [ -e $LOCALFILE ];then
    ISTURE=`file $LOCALFILE| grep "gzip compressed data"| wc -w`
    if [ $ISTURE -eq 0 ];then
      continue
    else
      cd $WORKDIR ;tar xfz $LOCALFILE
      if [ -e $IMAGE_DIR_TMP ];then
        ffmpeg -f image2 -i $IMAGE_DIR_TMP/image%03d.jpg -vcodec libx264 -y $IMAGE_DIR/${HOURAGO}.mp4 >/dev/null 2>&1
        rm -rf $IMAGE_DIR_TMP $LOCALFILE
      fi
    fi
  else
    continue
  fi
  if [ $NOWHOUR = "00:" ];then
    ls -l $IMAGE_DIR/*| grep $DAYAGO| awk '{printf("file %s\n",$9)}' >$FFMPEGINPUT
    RMIMAGE=`ls -l $IMAGE_DIR/*| grep $DAYAGO| awk '{printf(" %s",$9)}'`
    if [ `echo $RMIMAGE| wc -w` -eq 0 ];then
      continue
    fi
    ffmpeg -safe 0 -f concat -i $FFMPEGINPUT -c copy -y $IMAGE_DIR/${DAYAGO}.mp4
    mv $IMAGE_DIR/${DAYAGO}.mp4 $MP_DIR/
    ln -s $MP_DIR/${DAYAGO}.mp4 $IMAGE_DIR/${DAYAGO}.mp4
    if [ -e $IMAGE_DIR/$RMIMAGE ];then
      rm $IMAGE_DIR/$RMIMAGE
      rm $FFMPEGINPUT
    fi
    WEEKAGO_IMAGE=`ls -l $MP_DIR/*| grep $WEEKAGO`
    if [ `echo $WEEKAGO_IMAGE| wc -w` -eq 0 ];then
      continue
    else
      if [ -e $MP_DIR/$WEEKAGO_IMAGE ];then
        rm $IMAGE_DIR/$WEEKAGO_IMAGE
        rm $MP_DIR/$WEEKAGO_IMAGE
      fi
    fi
  fi
done
