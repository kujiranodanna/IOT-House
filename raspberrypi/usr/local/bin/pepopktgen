#!/bin/bash
# pepopktgen is make of script which packet generator. it came from the Linuecho  packet generator module.
# This script very danger,does not have full knowledge to network,prohibition of use. 
# licence GPLv2 ; this scripts designed by IZAMUKARERA ; make-up at Aug 2004 ; it's violent hot summer.
# Update Apr 2006 so good season. last update 2007.6.2 
help_msg() {
	echo "Configuring
	Configuring is done via the /proc interface this is easiest done via scripts. Select a suitable
	script and customize. See the section with example scripts in this paper.
	ftp://robur.slu.se/pub/Linux/net-development/pktgen-testing/examples/
	Other examples has been contributed by Grant Grundler <grundler@parisc-linux.org>
	ftp://gsyprf10.external.hp.com/pub/pktgen-testing/
	Below is short description for current implemented commands.
	Pgcontrol commands
	start Starts sending on all processes
	stop
	Process commands
	add_device Add a device to process i.e eth0
	rem_device_all Removes all devices from this process config
	max_before_softirq do_softirq() after sending a number of packets
Device commands
debug
clone_skb
	Number of identical copies of the same packet 0 means alloc for each skb. For DoS etc we must alloc new skb's.
clear_counters
pkt_size
	Link packet size minus CRC (4)
min_pkt_size
	Range pkt_size setting If < max_pkt_size, then cycle through the port range.
max_pkt_size
	frags Number of fragments for a packet count Number of packets to send, zero for continious sending
delay
	Inter-Packet Gap. Artificial gap inserted between packets in nanoseconds
dst
	IP destination address i.e 10.0.0.1
dst_min
	Same as dst If < dst_max, then cycle through the port range.
dst_max Maximum
	destination IP. i.e 10.0.0..1
src_min 
	Minimum (or only) source IP. i.e 10.0.0.254 If < src_max, then cycle through the port range.
src_max
	Maximum source IP.
dst6
	IPV6 destination address i.e fec0::1
src6 
	IPV6 source address i.e fec0::2
dst_mac 
	MAC destination adress 00:00:00:00:00:00
src_mac 
	MAC source adress. If omitted it's automatically taken from source device
src_mac_count 
	Number of MACs we'll range through. Minimum' MAC is what you set with srcmac.
dst_mac_count 
	Number of MACs we'll range through.Minimum' MAC is what you set with dstmac.
flag [name] Flag to modify behaviour.
	IPSRC_RND IP Source is random (between min/max),
	IPDST_RND Etc
	TXSIZE_RND
	UDPSRC_RND
	UDPDST_RND
	MACSRC_RND
	MACDST_RND
udp_src_min
	UDP source port min, If < udp_src_max, then cycle through the port range.
udp_src_max 
	UDP source port max.
udp_dst_min 
	UDP destination port min, If < udp_dst_max, then cycle through the port range.
udp_dst_max
	UDP destination port max.
stop
	Aborts packet injection. Ctrl-C also aborts generator.
	Note: It is generally better to use count 0 (forever) and stop the run with Ctrl-C when multiple devices are assigned to one pktgen thread. This avoids some devices finishing before others and skewing the results since we are primarily interested in packets over time, not absolute number of packets.flows Number of concurrent flows flowlen Length flows"
}

if [  "X-help" = "X"$1 ] ; then
	help_msg
	exit 0
fi

modprobe pktgen
PG_DEV=eth0
PG_CTL=/proc/net/pktgen/kpktgend_0
PG_STATUS=/proc/net/pktgen/$PG_DEV

function pgset() {
    local result

    echo $1 > $PG_CTL

    result=`cat $PG_CTL | fgrep "Result: OK:"`
    if [ "$result" = "" ]; then
         cat $PG_CTL | fgrep Result:
    fi
}

function pg() {
    echo $1 >/proc/net/pktgen/pgctrl
    cat $PG_STATUS
}

echo "Removing all devices"
pgset "rem_device_all"
echo "Adding $PG_DEV"
pgset "add_device $PG_DEV"
echo "Setting max_before_softirq 10000"
pgset "max_before_softirq 10000"
PG_CTL=/proc/net/pktgen/$PG_DEV

# ------ Edit-start from here ---------------
# We need to do alloc for every skb since we cannot clone here.
pgset "clone_skb 0"
#pg  "stop" ;exit #aborts injection,At first this line commented out.
pgset  "src_mac 00:00:00:00:00:01" #sets MAC source address
pgset  "dst_mac 00:00:00:00:00:02" #sets MAC destination addressset
pgset  "dst_min 192.168.0.1" #Set the minimum or only source IP.
pgset  "dst_max 192.168.0.2" #Set the max imum destination IP.
pgset  "src_min 192.168.0.3" # Set the max imum source IP.
pgset  "src_max 192.168.0.4" #Set the max imum source IP.
pgset  "pkt_size 60" #default is 60;sets packet size to 64 --> Auto add FCS's 4 bytes,This is meaning of wire speed.
pgset  "count 10000" #sets number of packets to send, set to zero continuation
pgset  "delay 9600" #sets artificial gap inserted between packets 9600ns. minimal for 10Mbps,100Mbps -->960,1000Mbps -->96
pg      "start"	#packet injection,Finally this comment out!

